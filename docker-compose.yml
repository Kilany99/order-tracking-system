
services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1999King
      POSTGRES_DB: delivery
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    healthcheck:
      test: ["CMD", "kafka-topics", "--list", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      retries: 5
      timeout: 5s
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    ports:
      - "9092:9092"
      - "29092:29092"

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    ports:
      - "5000:50"
    depends_on:
      - postgres

    environment:
      ConnectionStrings__Postgres: "Host=postgres;Database=delivery;Username=postgres;Password=1999King"
      Kafka__BootstrapServers: "kafka:9092"


  driver-service:
    build:
      context: ./driver-service
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    depends_on:
      - postgres
    environment:
      ConnectionStrings__Postgres: "Host=postgres;Database=driver;Username=postgres;Password=1999King"
      Kafka__BootstrapServers: "localhost:9092"


  customer-service:
    build:
      context: ./customer-service
      dockerfile: Dockerfile
    ports:
      - "8000:80"

  mongodb:
    image: mongo:6.0
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 1999King
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db

volumes:
  postgres-data:
  mongodb-data: